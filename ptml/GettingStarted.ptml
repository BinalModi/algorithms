<html>
    <head>
        <link href="style.css" rel="stylesheet" type="text/css"/>
        <title>
            Design and Analyis of Algorithms:  Getting Started
        </title>
    </head>

    <body>
<!--include menu.txt -->
        <h1>
            Design and Analyis of Algorithms:  Getting Started
        </h1>

            <div style="text-align:center">
                <p>
                <img src="">
                </p>
            </div>

            <details>
                <summary class="sum1">
                Insertion Sort
                </summary>

                <details>
                    <summary class="sum2">
                    How Insertion Sort Works
                    </summary>

                    <ul>
                        <li>
                            <b>Input</b>:
                            A sequence of <i>n</i> numbers 
                            &lang;
                            <i>a</i><sub>1</sub>,
                            <i>a</i><sub>2</sub>, . . .
                            <i>a</i><sub><i>n</i></sub>
                            &rang;
                        </li>
                        <li>
                            <b>Output</b>: A permutation (reordering)
                            &lang;
                            <i>a</i>'<sub>1</sub>,
                            <i>a</i>'<sub>2</sub>, . . .
                            <i>a</i>'<sub><i>n</i></sub>
                            &rang;
                            such that
                            <i>a</i>'<sub>1</sub> &le;
                            <i>a</i>'<sub>2</sub> &le; . . .
                            &le; <i>a</i>'<sub><i>n</i></sub>.
                        </li>
                    </ul>

                    <p>
                        <b>Pseudo-code</b>: We employ this instead of "real"
                        code. It keeps the "code" language independent,
                        and allows us to express ideas in the simplest way
                        possible.
                    </p>

                </details>

                <details>
                    <summary class="sum2">
                    Loop Invariants
                    </summary>
    
                    <p>
                    A key idea in proving correctness. We must show
                    the algorithm is correct at:
                    </p>

                    <ol>
                        <li>
                            <b>Initialization</b>: The invariant is true 
                            before the loop starts.
                        </li>
                        <li>
                            <b>Maintenance</b>: The invariant is true
                            at the "top" of the loop each time through.
                        </li>
                        <li>
                            <b>Termination</b>: The invariant is true
                            when the loop terminates.
                        </li>
                    </ol>

                </details>

            </details>

            <details>
                <summary class="sum1">
                Running code in your browser
                </summary>

                <p>
                Here is Python code for a swap routine, which our textbook
                uses periodically:
                </p>
        <pre>
        
        l = [1, 2, 3]
        
        def swap(l, i, j): 
            temp = l[i]
            l[i] = l[j]
            l[j] = temp
        
        </pre>

                <p>
                    Paste that code into the Python console below:
                </p>
 
<!--include python_anywhere.txt -->

                <p>
                    Hit return. Then type 'swap(l, 0, 2)' and hit return.
                    <br />
                    Then type 'l'.
                    <br />
                    <br />
                    You should see '[3, 2, 1]': you swapped element 0 and
                    2!
                </p>

                <p>
                    Now type in the following:
                </p>

    <pre>
        def bubble_sort(l):
            for i in range(0, len(l) - 1):
                for j in range(len(l) - 1, i, -1):
                    if l[j] < l[j - 1]:
                        print("Swapping " + str(l[j]) + " and "
                                + str(l[j - 1]))
                        swap(l, j, j - 1)
            return l
    </pre>

            </details>

            <details>
                <summary class="sum1">
                Source Code
                </summary>
                <p>
<!--include GettingStarted_langs.txt -->
                </p>
            </details>

            <details>
                <summary class="sum1">
                For Further Study
                </summary>
                <ul>
                </ul>
            </details>
            
            <details>
                <summary class="sum1">
                Homework
                </summary>
            </details>
    </body>
<!--include google_analytics.txt -->
</html>
